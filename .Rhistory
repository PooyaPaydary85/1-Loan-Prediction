swirl()
skip()
boring_function("my first function")
boring_function('My first
| function!')
boring_function('My first function!')
boring_function
play
play()
sum(2,3,4)
sum (c(2,3,4))
nxt()
submit()
submit()
submit
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder (4,div=2)
args(remainder)
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate (f(x){x[1]},y)
evaluate (f(x){x[1]},x)
evaluate (f(x){x[1]},c(8,4, 0))
evaluate (f(x){x[1]},c(8,4, 0))
skip()
evaluate (function(x) {x[length(x)]}, c(8, 4, 0))
?paste
paste
sum
nxt()
paste("Programming", "is", "fun!")
submit
submit()
submit()
SUBMIT()
submit()
telegram(hassan)
telegram("hasan")
submit
submit()
submit()
mad_libs(Pooya,Isfahan, book )
mad_libs("Pooya Isfahan book" )
mad_libs ("pooya","isfahan","book")
skip()
skip()
#Reading the train and test data sets
train <- read.csv("train.csv",header=T)
test <- read.csv("test.csv",header=T)
#Making sure that both train and test have the same number of columns and column names so that we can mix them
test$Loan_Status<- as.factor(NA)
train$CoapplicantIncome <-as.integer(train$CoapplicantIncome)
#This column is created so that we can later seperate train and test
train$isTraining <-T
test$isTraining <-F
#We are binding the two datasets
total <- rbind(train,test)
#Cleaning the data
total[total$Gender=="","Gender"] <-'Male'
total[total$Married=="","Married"] <-'Yes'
total[total$Dependents=="","Dependents"] <-'0'
total[total$Self_Employed=="","Self_Employed"] <-'No'
median.loan<-median(total$LoanAmount,na.rm = TRUE)
total[is.na(total$LoanAmount),"LoanAmount"] <-median.loan
median.loan.term<-median(total$Loan_Amount_Term,na.rm = TRUE)
total[is.na(total$Loan_Amount_Term),"Loan_Amount_Term"] <-median.loan.term
#Data is cleaned now its time to seperate them again
train <-total[,"isTraining"==TRUE]
test <-total[,"isTraining"==FALSE]
#Install the random forest package
install.packages("randomForest")
library("randomForest")
#Reading the train and test data sets
train <- read.csv("train.csv",header=T)
test <- read.csv("test.csv",header=T)
#Making sure that both train and test have the same number of columns and column names so that we can mix them
test$Loan_Status<- as.factor(NA)
train$CoapplicantIncome <-as.integer(train$CoapplicantIncome)
#This column is created so that we can later seperate train and test
train$isTraining <-T
test$isTraining <-F
#We are binding the two datasets
total <- rbind(train,test)
#Reading the train and test data sets
train <- read.csv("train.csv",header=T)
test <- read.csv("test.csv",header=T)
getwd()
setwd("C:/Users/Env.lab/Desktop/Data Science/Random Projects/Loan Prediction")
#Making sure that both train and test have the same number of columns and column names so that we can mix them
test$Loan_Status<- as.factor(NA)
setwd("C:/Users/Env.lab/Desktop/Data Science/Random Projects/Loan Prediction")
#Reading the train and test data sets
train <- read.csv("train.csv",header=T)
test <- read.csv("test.csv",header=T)
#Making sure that both train and test have the same number of columns and column names so that we can mix them
test$Loan_Status<- as.factor(NA)
train$CoapplicantIncome <-as.integer(train$CoapplicantIncome)
#This column is created so that we can later seperate train and test
train$isTraining <-T
test$isTraining <-F
#We are binding the two datasets
total <- rbind(train,test)
#Cleaning the data
total[total$Gender=="","Gender"] <-'Male'
total[total$Married=="","Married"] <-'Yes'
total[total$Dependents=="","Dependents"] <-'0'
total[total$Self_Employed=="","Self_Employed"] <-'No'
median.loan<-median(total$LoanAmount,na.rm = TRUE)
total[is.na(total$LoanAmount),"LoanAmount"] <-median.loan
median.loan.term<-median(total$Loan_Amount_Term,na.rm = TRUE)
total[is.na(total$Loan_Amount_Term),"Loan_Amount_Term"] <-median.loan.term
#Data is cleaned now its time to seperate them again
train <-total[,"isTraining"==TRUE]
test <-total[,"isTraining"==FALSE]
#Install the random forest package
install.packages("randomForest")
library("randomForest")
install.packages("randomForest")
library("randomForest")
?randomForest
clean
clean()
cls()
clear()
colnames9train)
colnames(train)
colnames (train)
col(train)
levels(total$Property_Area)
head(train)
setwd("C:/Users/Env.lab/Desktop/Data Science/Random Projects/Loan Prediction")
#Reading the train and test data sets
train <- read.csv("train.csv",header=T)
test <- read.csv("test.csv",header=T)
#Making sure that both train and test have the same number of columns and column names so that we can mix them
test$Loan_Status<- as.factor(NA)
train$CoapplicantIncome <-as.integer(train$CoapplicantIncome)
#This column is created so that we can later seperate train and test
train$isTraining <-T
test$isTraining <-F
#We are binding the two datasets
total <- rbind(train,test)
#Cleaning the data
total[total$Gender=="","Gender"] <-'Male'
total[total$Married=="","Married"] <-'Yes'
total[total$Dependents=="","Dependents"] <-'0'
total[total$Self_Employed=="","Self_Employed"] <-'No'
median.loan<-median(total$LoanAmount,na.rm = TRUE)
total[is.na(total$LoanAmount),"LoanAmount"] <-median.loan
median.loan.term<-median(total$Loan_Amount_Term,na.rm = TRUE)
total[is.na(total$Loan_Amount_Term),"Loan_Amount_Term"] <-median.loan.term
#Data is cleaned now its time to seperate them again
train <-total[,"isTraining"==TRUE]
test <-total[,"isTraining"==FALSE]
setwd("C:/Users/Env.lab/Desktop/Data Science/Random Projects/Loan Prediction")
#Reading the train and test data sets
train <- read.csv("train.csv",header=T)
test <- read.csv("test.csv",header=T)
#Making sure that both train and test have the same number of columns and column names so that we can mix them
test$Loan_Status<- as.factor(NA)
train$CoapplicantIncome <-as.integer(train$CoapplicantIncome)
#This column is created so that we can later seperate train and test
train$isTraining <-T
test$isTraining <-F
#We are binding the two datasets
total <- rbind(train,test)
#Cleaning the data
total[total$Gender=="","Gender"] <-'Male'
total[total$Married=="","Married"] <-'Yes'
total[total$Dependents=="","Dependents"] <-'0'
total[total$Self_Employed=="","Self_Employed"] <-'No'
median.loan<-median(total$LoanAmount,na.rm = TRUE)
total[is.na(total$LoanAmount),"LoanAmount"] <-median.loan
median.loan.term<-median(total$Loan_Amount_Term,na.rm = TRUE)
total[is.na(total$Loan_Amount_Term),"Loan_Amount_Term"] <-median.loan.term
train <-total[,"isTraining"==TRUE]
#Data is cleaned now its time to seperate them again
train <-total[,"isTraining"==T]
test <-total[,"isTraining"==F]
head(total)
train <-total[,isTraining==T]
test <-total[,isTraining==F]
train <-total[,'isTraining'==T]
test <-total[,'isTraining'==F]
train <-total[,total$isTraining==T]
train <-total[,total$isTraining==T]
train <-total[,"isTraining"==T]
total[2,3]
train <-total["isTraining"==T]
train <-total["isTraining"==T]
total[2,Self_Employed]
total[2,"Self_Employed"]
total[,"Self_Employed"]
train <-total["isTraining"==T,]
setwd("C:/Users/Env.lab/Desktop/Data Science/Random Projects/Loan Prediction")
#Reading the train and test data sets
train <- read.csv("train.csv",header=T)
test <- read.csv("test.csv",header=T)
#Making sure that both train and test have the same number of columns and column names so that we can mix them
test$Loan_Status<- as.factor(NA)
train$CoapplicantIncome <-as.integer(train$CoapplicantIncome)
#This column is created so that we can later seperate train and test
train$isTraining <-T
test$isTraining <-F
#We are binding the two datasets
total <- rbind(train,test)
#Cleaning the data
total[total$Gender=="","Gender"] <-'Male'
total[total$Married=="","Married"] <-'Yes'
total[total$Dependents=="","Dependents"] <-'0'
total[total$Self_Employed=="","Self_Employed"] <-'No'
median.loan<-median(total$LoanAmount,na.rm = TRUE)
total[is.na(total$LoanAmount),"LoanAmount"] <-median.loan
median.loan.term<-median(total$Loan_Amount_Term,na.rm = TRUE)
total[is.na(total$Loan_Amount_Term),"Loan_Amount_Term"] <-median.loan.term
train <-total["isTraining"==T,]
train <-total[total$isTraining==T,]
test <-total[total$isTraining==F,]
total['isTraining']
total['isTraining'=T]
total["isTraining"=T]
total["isTraining"==T]
total[total$isTraining==T]
total$isTraining==T
total[total$isTraining==T]
total[total$isTraining==T,]
total[total$isTraining]
total[isTraining]
total["isTraining"]
total[total$isTraining]
[isTraining==T]
isTraining==T
"isTraining"==T
total["isTraining"==T]
total[total$isTraining==T]
total["isTraining"==T]
total[total$isTraining==T,]
total[is.na(total$Loan_Amount_Term),total$Loan_Amount_Term] <-median.loan.term
setwd("C:/Users/Env.lab/Desktop/Data Science/Random Projects/Loan Prediction")
#Reading the train and test data sets
train <- read.csv("train.csv",header=T)
test <- read.csv("test.csv",header=T)
#Making sure that both train and test have the same number of columns and column names so that we can mix them
test$Loan_Status<- as.factor(NA)
train$CoapplicantIncome <-as.integer(train$CoapplicantIncome)
#This column is created so that we can later seperate train and test
train$isTraining <-T
test$isTraining <-F
#We are binding the two datasets
total <- rbind(train,test)
#Cleaning the data
total[total$Gender=="","Gender"] <-'Male'
total[total$Married=="","Married"] <-'Yes'
total[total$Dependents=="","Dependents"] <-'0'
total[total$Self_Employed=="","Self_Employed"] <-'No'
median.loan<-median(total$LoanAmount,na.rm = TRUE)
total[is.na(total$LoanAmount),"LoanAmount"] <-median.loan
median.loan.term<-median(total$Loan_Amount_Term,na.rm = TRUE)
total[is.na(total$Loan_Amount_Term),"Loan_Amount_Term"] <-median.loan.term
#Data is cleaned now its time to seperate them again
train <-total[total$isTraining==T,]
test <-total[total$isTraining==F,]
#Install the random forest package
install.packages("randomForest")
library("randomForest")
install.packages("randomForest")
str(train)
colnames(train)
setwd("C:/Users/Env.lab/Desktop/Data Science/Random Projects/Loan Prediction")
#Reading the train and test data sets
train <- read.csv("train.csv",header=T)
test <- read.csv("test.csv",header=T)
#Making sure that both train and test have the same number of columns and column names so that we can mix them
test$Loan_Status<- as.factor(NA)
train$CoapplicantIncome <-as.integer(train$CoapplicantIncome)
#This column is created so that we can later seperate train and test
train$isTraining <-T
test$isTraining <-F
#We are binding the two datasets
total <- rbind(train,test)
#Cleaning the data
total[total$Gender=="","Gender"] <-'Male'
total[total$Married=="","Married"] <-'Yes'
total[total$Dependents=="","Dependents"] <-'0'
total[total$Self_Employed=="","Self_Employed"] <-'No'
median.loan<-median(total$LoanAmount,na.rm = TRUE)
total[is.na(total$LoanAmount),"LoanAmount"] <-median.loan
median.loan.term<-median(total$Loan_Amount_Term,na.rm = TRUE)
total[is.na(total$Loan_Amount_Term),"Loan_Amount_Term"] <-median.loan.term
#Data is cleaned now its time to seperate them again
train <-total[total$isTraining==T,]
test <-total[total$isTraining==F,]
#Install the random forest package
install.packages("randomForest")
library("randomForest")
#Set up the Forest
loan.status.equation <-"Loan_Status ~ Married + Education + ApplicantIncome + LoanAmount + Credit_History + Gender + Dependents + Self_Employed + CoapplicantIncome + Loan_Amount_Term + Property_Area "
loan.status.formula<-as.formula (loan.status.equation)
levels(total$Property_Area)
sum(is.na(total$Loan_Amount_Term))
str(total)
install.packages("randomForest")
loan.status.equation <-"Loan_Status ~ Married + Education + ApplicantIncome + LoanAmount + Credit_History + Gender + Dependents + Self_Employed + CoapplicantIncome + Loan_Amount_Term + Property_Area "
loan.status.formula<-as.formula (loan.status.equation)
loan.status.equation <-"Loan_Status ~ Married + Education + ApplicantIncome + LoanAmount + Credit_History + Gender + Dependents + Self_Employed + CoapplicantIncome + Loan_Amount_Term + Property_Area "
loan.status.formula<-as.formula (loan.status.equation)
model <- randomForest(formula=loan.status.formula, data=train, ntree=500, mtry=3, nodsize=0.01*nrow(test))
str(train)
is.na(train$Loan_Status)
sum(is.na(train$Loan_Status))
model <- randomForest(formula=loan.status.formula, data=train, ntree=500, mtry=3, nodsize=0.01*nrow(train))
model <- randomForest(formula=loan.status.formula, data=train, ntree=500, mtry=3, nodsize=0.01*nrow(train), na.action=na.roughfix)
str(train)
setwd("C:/Users/Env.lab/Desktop/Data Science/Random Projects/Loan Prediction")
#Reading the train and test data sets
train <- read.csv("train.csv",header=T)
test <- read.csv("test.csv",header=T)
#Making sure that both train and test have the same number of columns and column names so that we can mix them
test$Loan_Status<- as.factor(NA)
train$CoapplicantIncome <-as.integer(train$CoapplicantIncome)
#This column is created so that we can later seperate train and test
train$isTraining <-T
test$isTraining <-F
#We are binding the two datasets
total <- rbind(train,test)
#Cleaning the data
total[total$Gender=="","Gender"] <-'Male'
total[total$Married=="","Married"] <-'Yes'
total[total$Dependents=="","Dependents"] <-'0'
total[total$Self_Employed=="","Self_Employed"] <-'No'
median.loan<-median(total$LoanAmount,na.rm = TRUE)
total[is.na(total$LoanAmount),"LoanAmount"] <-median.loan
median.loan.term<-median(total$Loan_Amount_Term,na.rm = TRUE)
total[is.na(total$Loan_Amount_Term),"Loan_Amount_Term"] <-median.loan.term
#Data is cleaned now its time to seperate them again
train <-total[total$isTraining==T,]
test <-total[total$isTraining==F,]
#Install the random forest package
install.packages("randomForest")
library("randomForest")
#Set up the Forest
loan.status.equation <-"Loan_Status ~ Married + Education + ApplicantIncome + LoanAmount + Credit_History + Gender + Dependents + Self_Employed + CoapplicantIncome + Loan_Amount_Term + Property_Area "
loan.status.formula<-as.formula (loan.status.equation)
model <- randomForest(formula=loan.status.formula, data=train, ntree=500, mtry=3, nodsize=0.01*nrow(train), na.action=na.roughfix)
install.packages("randomForest")
setwd("C:/Users/Env.lab/Desktop/Data Science/Random Projects/Loan Prediction")
#Install the random forest package
library("randomForest")
#Reading the train and test data sets
train <- read.csv("train.csv",header=T)
test <- read.csv("test.csv",header=T)
#Making sure that both train and test have the same number of columns and column names so that we can mix them
test$Loan_Status<- as.factor(NA)
train$CoapplicantIncome <-as.integer(train$CoapplicantIncome)
#This column is created so that we can later seperate train and test
train$isTraining <-T
test$isTraining <-F
#We are binding the two datasets
total <- rbind(train,test)
#Cleaning the data
total[total$Gender=="","Gender"] <-'Male'
total[total$Married=="","Married"] <-'Yes'
total[total$Dependents=="","Dependents"] <-'0'
total[total$Self_Employed=="","Self_Employed"] <-'No'
median.loan<-median(total$LoanAmount,na.rm = TRUE)
total[is.na(total$LoanAmount),"LoanAmount"] <-median.loan
median.loan.term<-median(total$Loan_Amount_Term,na.rm = TRUE)
total[is.na(total$Loan_Amount_Term),"Loan_Amount_Term"] <-median.loan.term
#Data is cleaned now its time to seperate them again
train <-total[total$isTraining==T,]
test <-total[total$isTraining==F,]
#Set up the Forest
loan.status.equation <-"Loan_Status ~ Married + Education + ApplicantIncome + LoanAmount + Credit_History + Gender + Dependents + Self_Employed + CoapplicantIncome + Loan_Amount_Term + Property_Area "
loan.status.formula<-as.formula (loan.status.equation)
model <- randomForest(formula=loan.status.formula, data=train, ntree=500, mtry=3, nodsize=0.01*nrow(train), na.action=na.roughfix)
str(train)
total[total$Gender=="","Gender"] <-'Male'
setwd("C:/Users/Env.lab/Desktop/Data Science/Random Projects/Loan Prediction")
#Install the random forest package
library("randomForest")
#Reading the train and test data sets
train <- read.csv("train.csv",header=T)
test <- read.csv("test.csv",header=T)
#Making sure that both train and test have the same number of columns and column names so that we can mix them
test$Loan_Status<- as.factor(NA)
train$CoapplicantIncome <-as.integer(train$CoapplicantIncome)
#This column is created so that we can later seperate train and test
train$isTraining <-T
test$isTraining <-F
#We are binding the two datasets
total <- rbind(train,test)
#Cleaning the data
total[total$Gender=="","Gender"] <-'Male'
total[total$Married=="","Married"] <-'Yes'
total[total$Dependents=="","Dependents"] <-'0'
total[total$Self_Employed=="","Self_Employed"] <-'No'
median.loan<-median(total$LoanAmount,na.rm = TRUE)
total[is.na(total$LoanAmount),"LoanAmount"] <-median.loan
median.loan.term<-median(total$Loan_Amount_Term,na.rm = TRUE)
total[is.na(total$Loan_Amount_Term),"Loan_Amount_Term"] <-median.loan.term
#Data is cleaned now its time to seperate them again
train <-total[total$isTraining==T,]
test <-total[total$isTraining==F,]
#Set up the Forest
loan.status.equation <-"Loan_Status ~ Married + Education + ApplicantIncome + LoanAmount + Credit_History + Gender + Dependents + Self_Employed + CoapplicantIncome + Loan_Amount_Term + Property_Area "
loan.status.formula<-as.formula (loan.status.equation)
model <- randomForest(formula=loan.status.formula, data=train, ntree=500, mtry=3, nodsize=0.01*nrow(train), na.action=na.roughfix)
str(total)
levels(total$Gender)
total[total$Gender=="","Gender"] <-'Male'
total$Gender
train$Gender
str(train)
train$Married
Loan_Status <- predict(model, newdata = test)
Loan_Status
setwd("C:/Users/Env.lab/Desktop/Data Science/Random Projects/Loan Prediction")
#Install the random forest package
library("randomForest")
#Reading the train and test data sets
train <- read.csv("train.csv",header=T)
test <- read.csv("test.csv",header=T)
#Making sure that both train and test have the same number of columns and column names so that we can mix them
test$Loan_Status<- as.factor(NA)
train$CoapplicantIncome <-as.integer(train$CoapplicantIncome)
#This column is created so that we can later seperate train and test
train$isTraining <-T
test$isTraining <-F
#We are binding the two datasets
total <- rbind(train,test)
#Cleaning the data
total[total$Gender=="","Gender"] <-'Male'
total[total$Married=="","Married"] <-'Yes'
total[total$Dependents=="","Dependents"] <-'0'
total[total$Self_Employed=="","Self_Employed"] <-'No'
median.loan<-median(total$LoanAmount,na.rm = TRUE)
total[is.na(total$LoanAmount),"LoanAmount"] <-median.loan
median.loan.term<-median(total$Loan_Amount_Term,na.rm = TRUE)
total[is.na(total$Loan_Amount_Term),"Loan_Amount_Term"] <-median.loan.term
#Data is cleaned now its time to seperate them again
train <-total[total$isTraining==T,]
test <-total[total$isTraining==F,]
#Set up the Forest
loan.status.equation <-"Loan_Status ~ Married + Education + ApplicantIncome + LoanAmount + Credit_History + Gender + Dependents + Self_Employed + CoapplicantIncome + Loan_Amount_Term + Property_Area "
loan.status.formula<-as.formula (loan.status.equation)
model <- randomForest(formula=loan.status.formula, data=train, ntree=500, mtry=3, nodsize=0.01*nrow(train), na.action=na.roughfix)
Loan_Status <- predict(model, newdata = test)
Loan_Status
head(test)
loan.prediction <- predict(model, newdata = test)
loan.prediction
tail(test)
str(total)
sum(is.na(total$Credit_History))
sum(is.na(train$Credit_History))
total[is.na(total$Credit_History),"Credit_History"] <-as.factor(1)
setwd("C:/Users/Env.lab/Desktop/Data Science/Random Projects/Loan Prediction")
#Install the random forest package
library("randomForest")
#Reading the train and test data sets
train <- read.csv("train.csv",header=T)
test <- read.csv("test.csv",header=T)
#Making sure that both train and test have the same number of columns and column names so that we can mix them
test$Loan_Status<- as.factor(NA)
train$CoapplicantIncome <-as.integer(train$CoapplicantIncome)
#This column is created so that we can later seperate train and test
train$isTraining <-T
test$isTraining <-F
#We are binding the two datasets
total <- rbind(train,test)
#Cleaning the data
total[total$Gender=="","Gender"] <-'Male'
total[total$Married=="","Married"] <-'Yes'
total[total$Dependents=="","Dependents"] <-'0'
total[total$Self_Employed=="","Self_Employed"] <-'No'
median.loan<-median(total$LoanAmount,na.rm = TRUE)
total[is.na(total$LoanAmount),"LoanAmount"] <-median.loan
median.loan.term<-median(total$Loan_Amount_Term,na.rm = TRUE)
total[is.na(total$Loan_Amount_Term),"Loan_Amount_Term"] <-median.loan.term
total[is.na(total$Credit_History),"Credit_History"] <-as.factor(1)
#Data is cleaned now its time to seperate them again
train <-total[total$isTraining==T,]
test <-total[total$isTraining==F,]
#Set up the Forest
loan.status.equation <-"Loan_Status ~ Married + Education + ApplicantIncome + LoanAmount + Credit_History + Gender + Dependents + Self_Employed + CoapplicantIncome + Loan_Amount_Term + Property_Area "
loan.status.formula<-as.formula (loan.status.equation)
model <- randomForest(formula=loan.status.formula, data=train, ntree=500, mtry=3, nodsize=0.01*nrow(train), na.action=na.roughfix)
loan.prediction <- predict(model, newdata = test)
tail(test)
loan.prediction
output <-test$Loan_ID
output$loan.prediction <-loan.prediction
tail(output)
tail(output)
output <-test$Loan_ID
output$loan.prediction <-as.dataframe(loan.prediction)
output <-as.dataframe(test$Loan_ID)
output <-as.data.frame(test$Loan_ID)
output$loan.prediction <-as.data.frame(loan.prediction)
tail(output)
?write.csv
write.csv (output,"Prediction.csv")
write.csv (output,"Prediction.csv",row.names=F)
tail(output)
write.csv (output,"Prediction.csv",row.names=F)
write.csv(output,"Prediction2.csv",row.names=F)
